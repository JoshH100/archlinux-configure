- name: install requirements
  pacman: name="{{ item }}" state=present update_cache=yes
  loop:
    - lzop
  when: doupgrade|bool

- name: copy upgrade scripts and services
  copy:
    src: "{{ item.name }}"
    dest: "/"
    mode: "{{ item.mode }}"
  tags: safe,upgrade
  with_items:
    - { name: "etc", mode: "0644" }
    - { name: "usr", mode: "0755" }
  notify: daemon-reload

- name: tmp - install pacman-contrib for paccache
  pacman: name=pacman-contrib state=present

- name: enable schedule-reboot and download-updates timer
  service:
    name: '{{ item }}' 
    state: started
    enabled: true
  tags: safe 
  with_items:
    - 'schedule-reboot.timer'
    - 'schedule-reboot.path'
    - 'download-updates.timer'
    - 'safe-upgrade.timer'
    - 'paccache.timer'
    #- 'pacman-keyring-update.timer' # has issues 2019/06/06

# ansible has bug where 'provided' packages are seen as installed so need ignore_errors for now
- name: Remove problematic and obsolete packages
  pacman:
    name: '{{ packages.remove }}'
    state: absent
    force: true
  ignore_errors: true
  when: doupgrade|bool

- name: update system
  pacman:
    upgrade: yes
    update_cache: yes
  register: updated
  when: doupgrade|bool

- name: install_packages list present
  pacman:
    name: "{{ packages.install }}"
    update_cache: yes
    state: present
  when: doupgrade|bool

# also have pacman hook... both methods have issues detecting every change to /boot
# (kernel, nvidia, etc)
#- name: Create /reboot-pending if kernel/driver has updated
#  file: path=/reboot-pending state=touch
#  when: updated.find('linux') != -1


#  with_items: "{{ install_packages }}"


#- name: Download package updates and schedule update
# shell: yes | pacman -Sy && yes | pacman -Suw && schedule-system-update 

#- name: Notify users of impending upgrade/reboot
#shell: /usr/local/bin/notify-users "Pending Upgrade" "Please save work and logoff" "critical"
